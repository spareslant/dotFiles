" Note: This vimrc is using native VIM plugin manager

set nocompatible
filetype plugin on
filetype indent on
syntax on
set encoding=utf-8
set fileencoding=utf-8
set autoindent
set ttyfast

" enable fzf
set rtp+=/usr/local/opt/fzf

" set path for swapfiles
set directory^=$HOME/.vim/swapfiles//

" highlight search as we typr
set incsearch

" treat .ejs files as erb templates
au BufNewFile,BufRead *.ejs set filetype=erb.html

" make sure winow size does not change when a split window is closed
set equalalways!

" no of spaces for tab
set tabstop=2

" no of spaces to be used while editing text. i.e <backspace> <tab>
set softtabstop=2

" no of spaces for autoindent
set shiftwidth=2

" convert tabs to spaces
set expandtab

" Leader key
let mapleader="\<space>"

" allow backspace to work in insert mode properly.
" indent => make backspace to work over autoindent
" eol => backspace will remove \n as well at the end of line
" start => delete text that you've inserted since insert mode started, and you can't delete any text that was previously inserted.'
set backspace=indent,eol,start

set path+=**

" commnd-line completions in vim
set wildmenu
set wildmode=full

" show line numbers
set number
" set relativenumber

" show commands being typed on the right bottom corner
set showcmd

" autoread changes done to file externally
set autoread

" autowrite files
set autowriteall

" controls buffer switching and opening
set switchbuf=useopen,usetab

" gruvBox Theme
set termguicolors
" let g:gruvbox_invert_selection = 0
" let g:gruvbox_invert_tabline = 1
" let g:gruvbox_improved_strings = 1
" set bg=dark
" let g:gruvbox_contrast_dark = 'hard'
" colorscheme gruvbox

" afterflow colorschem settings
" let g:afterglow_inherit_background=1
" let g:afterglow_blackout=1
" colorscheme afterglow

colorscheme jellybeans

" highlight the whole length of current line
set cursorline
if !has('nvim')
  set cursorlineopt=line
endif
hi CursorLine ctermfg=none cterm=bold

" style the vertical bar in window split
set fillchars+=vert:\│
set splitbelow
set splitright

" Open file explorer in tree style
" let g:netrw_liststyle = 3
let g:netrw_wiw = 18
let g:netrw_banner = 0
let g:netrw_altgv = 1
" negative number sets the absolte size. +ve number sets size in percentage
let g:netrw_winsize = -25

" Autocomplete uses dictionary if spell is set in the session. ie set spell
set complete+=kspell
set completeopt=menuone,longest

" highlight the searches and set the search highlight color more pleasing to eyes
set hlsearch

" Shows the mode of vim at the bottom of screen
set showmode

" set ruler. Position of cursor at the right bottom corner
set ruler

" Airline settings
set laststatus=2

" load all plugins first
packloadall

" Need to install powerline-fonts and make sure terminal is also set to use one of powerline fonts. Otherwise you won't see fancy status in statusline
let g:airline_powerline_fonts=1
function! WindowNumber(...)
    let builder = a:1
    let context = a:2
    call builder.add_section('airline_b', ' %{tabpagewinnr(tabpagenr())} ')
    return 0
endfunction

call airline#add_statusline_func('WindowNumber')
call airline#add_inactive_statusline_func('WindowNumber')
" Airline and Afterglow are working together here
let g:airline_theme='afterglow'

" ALE settings
" silent! helptags ALL
" let g:ale_linters_explicit = 1
" " let g:ale_linters = {'javascript': ['eslint'],
" " \                    'eruby': ['erubylint']}
" let g:ale_lint_on_save = 1
" " clear background color in SignColumn for the following two
" highlight clear ALEErrorSign
" highlight clear ALEWarningSign
" let g:ale_sign_error = '⛔'
" let g:ale_sign_warning = '❕'
" let g:ale_completion_enabled = 1
" set omnifunc=ale#completion#OmniFunc
" let g:ale_completion_autoimport = 1
" let g:ale_cursor_detail = 1
" let g:ale_warn_about_trailing_blank_lines = 1
" let g:ale_warn_about_trailing_whitespace = 1
highlight SignColumn ctermbg=235 cterm=none

" FZF settings
let g:fzf_files_options = '--preview "bat --style=numbers,changes --color always"'
" allows fzf to open files forecfully
set hidden

" vim-agriculture settings
let g:agriculture#disable_smart_quoting = 1

" Defining custom :CDdir command using fzf
function Cddir(dir)
  execute "tcd " . fnameescape(a:dir)
  execute "pwd"
endfunction
function ChangeDirFZF(query, fullscreen)
  let l:dirListCmd = 'fd -t d -H -I --exclude ".git" "" ' . a:query
  call fzf#run(fzf#wrap({
    \ 'source': l:dirListCmd,
    \ 'sink': function('Cddir'),
    \ 'options': ['--preview', 'tree -F -L 2 {}', '--preview-window', 'wrap']},
    \ a:fullscreen))
endfunction
command! -bang -complete=dir -nargs=* CDdir call ChangeDirFZF(<q-args>, <bang>0)
